{
  "configById": {
    "StateTransitions!1vqsza9": {
      "paths": [
        {
          "value": "engagement_primary.data",
          "timestampMethod": "receiveTime",
          "label": "Primary"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "engagement_secondary.data",
          "enabled": true,
          "label": "Secondary"
        }
      ],
      "isSynced": true,
      "foxglovePanelTitle": "Engagement"
    },
    "StateTransitions!261ws60": {
      "paths": [
        {
          "value": "driver_intervention_accelerator.data",
          "timestampMethod": "receiveTime",
          "label": "Accelerator"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "driver_intervention_braking.data",
          "enabled": true,
          "label": "Brake"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "driver_intervention_steering.data",
          "enabled": true,
          "label": "Steer"
        }
      ],
      "isSynced": true,
      "foxglovePanelTitle": "Driver Intervention"
    },
    "map!1l4qerf": {
      "center": {
        "lat": 48.34968966995839,
        "lon": 11.74868702888489
      },
      "customTileUrl": "",
      "disabledTopics": [],
      "followTopic": "gps",
      "layer": "satellite",
      "topicColors": {},
      "zoomLevel": 16,
      "maxNativeZoom": 18
    },
    "Plot!2lxkwdn": {
      "paths": [
        {
          "value": "vehicle_speed.data",
          "enabled": true,
          "timestampMethod": "receiveTime"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Speed"
    },
    "Plot!2xrjtud": {
      "paths": [
        {
          "value": "steering_rack_pos_request.data",
          "enabled": true,
          "timestampMethod": "receiveTime",
          "label": "SDS request"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "steering_rack_pos.data",
          "enabled": true,
          "label": "Vehicle"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Steering"
    },
    "Plot!fagwp6": {
      "paths": [
        {
          "value": "long_acceleration_request.data",
          "enabled": true,
          "timestampMethod": "receiveTime",
          "label": "SDS request"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "long_acceleration.data",
          "enabled": true,
          "label": "Vehicle"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": false,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Acceleration"
    },
    "Plot!29mzryc": {
      "paths": [
        {
          "value": "vehicle_speed.data",
          "enabled": true,
          "timestampMethod": "receiveTime"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240
    },
    "Plot!156a9vx": {
      "paths": [
        {
          "value": "long_acceleration.data",
          "enabled": true,
          "timestampMethod": "receiveTime"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240
    },
    "Plot!1tbli7": {
      "paths": [
        {
          "value": "throttle_pedal_position.data",
          "enabled": true,
          "timestampMethod": "receiveTime"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "brake_pedal_position.data",
          "enabled": true
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240
    },
    "map!ngdaxa": {
      "center": {
        "lat": 48.34968966995839,
        "lon": 11.74867495894432
      },
      "customTileUrl": "",
      "disabledTopics": [],
      "followTopic": "gps",
      "layer": "satellite",
      "topicColors": {},
      "zoomLevel": 19,
      "maxNativeZoom": 18
    },
    "StateTransitions!4jd95h4": {
      "paths": [
        {
          "value": "turn_indicator_left.data",
          "timestampMethod": "receiveTime",
          "label": "Left"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "turn_indicator_right.data",
          "enabled": true,
          "label": "Right"
        }
      ],
      "isSynced": true,
      "foxglovePanelTitle": "Turn Indicators"
    },
    "StateTransitions!82yeet": {
      "paths": [
        {
          "value": "gear_status.data",
          "timestampMethod": "receiveTime",
          "label": "Status"
        }
      ],
      "isSynced": true,
      "foxglovePanelTitle": "Gear Status"
    },
    "Tab!3mos3my": {
      "activeTabIdx": 1,
      "tabs": [
        {
          "title": "Dynamics",
          "layout": {
            "first": {
              "first": {
                "first": "StateTransitions!1vqsza9",
                "second": "StateTransitions!261ws60",
                "direction": "column"
              },
              "second": "map!1l4qerf",
              "direction": "row",
              "splitPercentage": 50
            },
            "second": {
              "first": {
                "first": "Plot!2lxkwdn",
                "second": "Plot!2xrjtud",
                "direction": "column"
              },
              "second": "Plot!fagwp6",
              "direction": "column",
              "splitPercentage": 63.75404530744336
            },
            "direction": "row",
            "splitPercentage": 63.08724832214765
          }
        },
        {
          "title": "Manual",
          "layout": {
            "first": {
              "first": "Plot!29mzryc",
              "second": {
                "first": "Plot!156a9vx",
                "second": "Plot!1tbli7",
                "direction": "column"
              },
              "direction": "column"
            },
            "second": {
              "first": "map!ngdaxa",
              "second": {
                "first": "StateTransitions!4jd95h4",
                "second": "StateTransitions!82yeet",
                "direction": "column"
              },
              "direction": "row"
            },
            "direction": "row",
            "splitPercentage": 30.621693121693124
          }
        }
      ]
    }
  },
  "globalVariables": {
    "globalVariable": 1
  },
  "userNodes": {
    "eb22759c-605b-4faa-ad5a-b76f3e8506ce": {
      "sourceCode": "// The ./types module provides helper types for your Input events and messages.\nimport { Input, Message } from \"./types\";\n\n// Your script can output well-known message types, any of your custom message types, or\n// complete custom message types.\n//\n// Use `Message` to access your data source types or well-known types:\n// type Twist = Message<\"geometry_msgs/Twist\">;\n//\n// Conventionally, it's common to make a _type alias_ for your script's output type\n// and use that type name as the return type for your script function.\n// Here we've called the type `Output` but you can pick any type name.\ntype Output = {\n  hello: string;\n};\n\n// These are the topics your script \"subscribes\" to. Studio will invoke your script function\n// when any message is received on one of these topics.\nexport const inputs = [\"/input/topic\"];\n\n// Any output your script produces is \"published\" to this topic. Published messages are only visible within Studio, not to your original data source.\nexport const output = \"/studio_script/output_topic\";\n\n// This function is called with messages from your input topics.\n// The first argument is an event with the topic, receive time, and message.\n// Use the `Input<...>` helper to get the correct event type for your input topic messages.\nexport default function script(event: Input<\"/input/topic\">): Output {\n  return {\n    hello: \"world!\",\n  };\n};",
      "name": "eb22759c"
    }
  },
  "playbackConfig": {
    "speed": 1
  },
  "layout": "Tab!3mos3my"
}